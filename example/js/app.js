// Generated by CoffeeScript 1.10.0
(function() {
  var app, bodyParser, express, jsonMarkup, klarna, server;

  express = require("express");

  klarna = require("./../../src/js/klarna");

  bodyParser = require("body-parser");

  jsonMarkup = require("json-markup");


  /* ASK KLARNA FOR TEST CREDENTIALS! */

  klarna.init({
    eid: '',
    secret: ''
  });

  klarna.config({
    terms_uri: 'http://www.example.com',
    cancellation_terms_uri: 'http://www.example.com',
    checkout_uri: 'http://www.example.com',
    confirmation_uri: 'http://localhost:3000/confirmation?klarna_order_id={checkout.order.id}',
    push_uri: 'http://www.example.com'
  });

  app = express();

  app.use(bodyParser.json());

  app.use(express["static"]('public'));

  app.post('/order', function(req, res) {
    return klarna.place(req.body).then(function(id) {
      console.log("Placing order");
      return klarna.fetch(id);
    }, function(error) {
      return res.status(500).send(error);
    }).then(function(order) {
      console.log("Snippet received");
      return res.send(order.gui.snippet);
    }, function(error) {
      return res.send(error);
    });
  });

  app.get('/confirmation', function(req, res) {
    var id;
    id = req.query.klarna_order_id;
    console.log("Confirming order");
    return klarna.confirm(id, '1000').then(function(order) {
      var html;
      console.log("Order confirmed");
      html = order.gui.snippet;
      html += '<div style="font-family: Helvetica, sans-serif; text-align: center"><a href="/order/' + id + '">View order</a>';
      return res.send(html);
    }, function(error) {
      return res.send(error);
    });
  });

  app.get('/order/:id', function(req, res) {
    var id;
    id = req.params.id;
    return klarna.fetch(id).then(function(order) {
      var html, key, val2, value;
      html = '';
      for (key in order) {
        value = order[key];
        if (typeof value === 'object') {
          html += '<strong>' + key + '</strong><br>';
          for (key in value) {
            val2 = value[key];
            if (key === 'snippet') {
              val2 = '(We don\'t want to render this now...)';
            }
            html += '&nbsp;&nbsp;' + key + ': ' + val2 + '<br>';
          }
        } else {
          html += key + ': ' + value + '<br>';
        }
      }
      return res.send(html);
    }, function(error) {
      return res.send(error);
    });
  });

  server = app.listen(3000, 'localhost', function() {
    var host, port;
    host = server.address().address;
    port = server.address().port;
    console.log("Klarna Checkout example server is up and running!");
    return console.log("Visit http://" + host + ":" + port + " in browser to try it.");
  });

}).call(this);
